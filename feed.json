{
    "version": "https://jsonfeed.org/version/1",
    "title": "沿岸踱步",
    "description": "沿岸踱步 & 成长记录",
    "home_page_url": "https://Lklyx.github.io",
    "items": [
        {
            "id": "https://lklyx.github.io/%E8%B8%A9%E5%9D%91%E7%AF%87/markdown/",
            "url": "https://lklyx.github.io/%E8%B8%A9%E5%9D%91%E7%AF%87/markdown/",
            "title": "markdown 编辑器介绍",
            "date_published": "2020-11-11T02:06:03.155Z",
            "content_html": "<h2 id=\"markdown编辑器\"><a class=\"markdownIt-Anchor\" href=\"#markdown编辑器\">#</a> <strong>Markdown 编辑器</strong></h2>\n<p>Markdown 其实在 2004 年就有了，不过之前一直很小众，这几年随着相关应用平台的发展，Markdown 以其独到的优势迅速火起来了。Markdown 编辑器使用一套格式标记语言来对文档内容进行排版和格式显示。而 Markdown 的标记很少，常用的也就十个左右，它是一种非常轻量的标记语言。</p>\n<p>Markdown 编辑器深受技术人员的喜爱，Markdown 可以用来编写说明文档，用它写的文档很多技术平台都能通用；Markdown 可以用来写技术博客，可以使说明部分和代码都非常清晰易读；Markdown 格式转换方便，还可以轻松地将文本转换为 html、pdf 等。</p>\n<h2 id=\"markdown-编辑器分类\"><a class=\"markdownIt-Anchor\" href=\"#markdown-编辑器分类\">#</a> Markdown 编辑器分类</h2>\n<p>按照 Markdown 编辑器的使用环境，可以将它们归纳为三类。</p>\n<ol>\n<li>平台集成工具：各大在线博客、社区平台自带的写作工具，比如 CSDN、博客园、简书等。</li>\n<li>独立软件类：下载到自己机器上使用的独立产品，可以编辑本地文件，比如 Mou、MarkdownEditor、Haroopad 等。</li>\n<li>插件类：他自己本身是不能独立使用的，可以在你现有的主流编辑器安装，使你现有的编辑器具有 Markdown 的功能，比如 Atom、WebStorm、Sublime Text 等。</li>\n</ol>\n<p>这三类软件分别面向三类 Markdown 用户，大家可以根据自己的需求来选择使用。</p>\n<h2 id=\"typora\"><a class=\"markdownIt-Anchor\" href=\"#typora\">#</a> Typora</h2>\n<p>我使用的就是这种编辑器，Typora 也是非常用名，非常好用的 markdown 编辑器，它的设计理念很不一样，是真正的即时预览型编辑器，不同于左右两个窗口的编辑器。Typora 的设计理念就是极致简洁，它将 <code>写字</code> 和 <code>预览</code> 这两件事情合并了。</p>\n<p>如果要修改已经写好的 markdown 标记可以点击切换到 “源代码模式”。</p>\n<p>Typora 同样支持 Windows、OS X 和 Linux 多个操作系统，支持数学编辑，可与 Word 直接格式转换，可以进行多种文档格式转换。Typora 流畅度和反应速度很快，特别适合那些手速快的人。</p>\n<p>Typora 是独立的软件。</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/20190914004721873.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RhdmlkaHpx,size_16,color_FFFFFF,t_70\" alt=\"typora\"></p>\n<h2 id=\"mou\"><a class=\"markdownIt-Anchor\" href=\"#mou\">#</a> Mou</h2>\n<p>Mou 是一款由国人开发的 Markdown 编辑器，支持实时预览，但是仅支持 苹果操作系统，可以说是目前最好用的免费 Markdown 编辑器，对汉字兼容性非常好。提供语法高亮、在线预览、同步滚动、全屏模式，支持自定保存、自动匹配，允许自定义主题等等。支持 CSS，HTML 和 PDF 导出等功能。</p>\n<p>Mou 是独立的软件。</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/20190914004721844.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RhdmlkaHpx,size_16,color_FFFFFF,t_70\" alt=\"mou\"></p>\n<h2 id=\"markdownpad\"><a class=\"markdownIt-Anchor\" href=\"#markdownpad\">#</a> MarkdownPad</h2>\n<p>MarkdownPad 被很多人称赞为 windows 下最好用的 Markdown 编辑器之一，不过仅支持 windows。它有免费版和收费版（MarkdownPad Pro），一般情况下免费版就够用了，想用 pro 版的可以自行网上下载，强大的国人 crack 无处不在的～~。</p>\n<p>MarkdownPad 支持键盘快捷键和工具栏操作，即可添加标记也可移除，支持即时 HTML 预览、支持自定义配色方案、字体、大小和布局、支持音乐视频，可以导出 HTML 和 PDF。</p>\n<p>MarkdownPad 是独立的软件。</p>\n<p><img data-src=\"https://imgconvert.csdnimg.cn/aHR0cDovL21hcmtkb3ducGFkLmNvbS9pbWcvbWFya2Rvd25wYWQyLnBuZw?x-oss-process=image/format,png\" alt></p>\n<h2 id=\"atom\"><a class=\"markdownIt-Anchor\" href=\"#atom\">#</a> Atom</h2>\n<p>Atom 可以说是专门为程序员推出的一个文本编辑器，界面简洁，支持实时预览。功能非常多，除了 Markdown 同时支持 CSS，HTML，JavaScript 等网页编程语言，还支持宏定义，自动分屏功能等。Atom 还具有语义输入模式，比例输入 code 即会自动开启代码模式。</p>\n<p>Atom 支持 windows、苹果、linux 等多种操作系统。Atom 是由著名的 github 平台出品的。</p>\n<p>Atom 是独立的软件，也支持插件方式。</p>\n<p><img data-src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly90aW1nc2EuYmFpZHUuY29tL3RpbWc_aW1hZ2UmcXVhbGl0eT04MCZzaXplPWI5OTk5XzEwMDAwJnNlYz0xNTY4OTgzNDI1JmRpPWI1ZmI3OTUxODBhYWM3OTY0ZDM4ZmMxNDk5NWM0OGFlJmltZ3R5cGU9anBnJmVyPTEmc3JjPWh0dHAlM0ElMkYlMkZpbWcuOTU1My5jb20lMkZ1cGxvYWQlMkYyMDE1JTJGMDQyMiUyRjIwMTUwNDIyMDQ0NTAyNDc3LmpwZw?x-oss-process=image/format,png\" alt=\"atom\"></p>\n<h2 id=\"cmd-markdown\"><a class=\"markdownIt-Anchor\" href=\"#cmd-markdown\">#</a> Cmd Markdown</h2>\n<p>Cmd Markdown 是一款不错的写作工具，同时也兼顾博客等写作平台，国内作业部落出品，同时支持 Windows、苹果、Linux 操作系统，也有 Web 在线创作平台，界面很舒服。</p>\n<p>Cmd Markdown 是独立的软件、也有平台集成版本。</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/20190914004721916.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RhdmlkaHpx,size_16,color_FFFFFF,t_70\" alt=\"dmd markdown\"></p>\n<h2 id=\"byword\"><a class=\"markdownIt-Anchor\" href=\"#byword\">#</a> Byword</h2>\n<p>Byword。一款轻量级的 Markdown 编辑器，比较容易上手，适合新手使用。支持苹果系列系统，包括台式机、iPad 和 iPhone，收费软件。</p>\n<p>Byword 是独立的软件。</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/20190914004722257.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RhdmlkaHpx,size_16,color_FFFFFF,t_70\" alt=\"byword\"></p>\n<h2 id=\"marxico\"><a class=\"markdownIt-Anchor\" href=\"#marxico\">#</a> Marxico</h2>\n<p>Marxico 中文名马克飞象，有桌面版、Chrome App 插件，也支持 Web 集成版。这款编辑器的特点是可以直接把文本存到印象笔记平台中，另外还有导出 HTML 时可以将其中的图片自动转成 base64 保存。其他的实时预览、语法高亮也都支持。</p>\n<p>不过这款软件是收费的～~</p>\n<p>Marxico 是独立的软件、同时有 Chrome App 插件，也支持 Web 集成。</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/2019091400472285.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RhdmlkaHpx,size_16,color_FFFFFF,t_70\" alt=\"marxico\"></p>\n<h2 id=\"markpad\"><a class=\"markdownIt-Anchor\" href=\"#markpad\">#</a> MarkPad</h2>\n<p>MarkPad 是免费开源的 Markdown 编辑器，界面风格与 window 系统类似，同时只支持 Window。支持实时预览，开放直接保存到你的博客或 github 的接口，有语法检查，支持代码高亮。</p>\n<p>MarkPad 是独立的软件。</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/20190914004722199.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RhdmlkaHpx,size_16,color_FFFFFF,t_70\" alt></p>\n<h2 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h2>\n<p>最后我用的是 Typora，在这里介绍一下使用过程中的感受，这个编辑器感觉很不错，无论是代码块的插入，还是公式块的插入，以及图片插入，都比较方便，需要注意的是，编辑每篇文章的标题的的时候，需要打开试图中的源代码模式，勾选上，不然的话，你写的 title 就会成为代码块模式，这样写出来的文章标题就会显示 <code>未命名</code></p>\n<p>如果你也喜欢或者也想使用这块编辑器那么 <code>下载地址</code> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudHlwb3JhLmlvLw==\">请戳此处</span></p>\n",
            "tags": []
        },
        {
            "id": "https://lklyx.github.io/%E8%8B%B1%E9%9B%84%E8%81%94%E7%9B%9F%E7%AF%87/%E5%89%91%E8%B1%AA/",
            "url": "https://lklyx.github.io/%E8%8B%B1%E9%9B%84%E8%81%94%E7%9B%9F%E7%AF%87/%E5%89%91%E8%B1%AA/",
            "title": "长路漫漫，唯剑作伴。",
            "date_published": "2020-11-06T09:03:11.490Z",
            "content_html": "<p><code>死亡如风，常伴吾身</code></p>\n<p>压缩 —— 疾风剑豪</p>\n",
            "tags": []
        },
        {
            "id": "https://lklyx.github.io/%E5%A5%8B%E6%96%97%E7%AF%87/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/",
            "url": "https://lklyx.github.io/%E5%A5%8B%E6%96%97%E7%AF%87/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/",
            "title": "搭建博客",
            "date_published": "2020-11-06T09:03:05.586Z",
            "content_html": "<h1 id=\"准备\"><a class=\"markdownIt-Anchor\" href=\"#准备\">#</a> 准备</h1>\n<blockquote>\n<p>安装 <code>git</code> ===》<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXQtc2NtLmNvbS9kb3dubG9hZHM=\">下载地址戳这里</span></p>\n<p>安装 <code>node.js</code> ===》<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub2RlanMub3JnL3poLWNuL2Rvd25sb2FkLw==\">下载地址戳这里</span></p>\n<p>因为是一些傻瓜式（猛点下一步）安装，所以安装过程我这里就不展示了，当然也可以自己选择路径，不过我建议安装到默认盘符。需要注意的是安装好 <code>node.js</code>  以后需要配置环境变量，依次点击 ===》右击此电脑 ===》属性 ===》高级系统设置 ===》高级 ===》环境变量。。。</p>\n</blockquote>\n<h1 id=\"安装hexo\"><a class=\"markdownIt-Anchor\" href=\"#安装hexo\">#</a> 安装 Hexo</h1>\n<blockquote>\n<ol>\n<li>\n<p>使用 npm（全局）安装</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hexo npm install hexo<span class=\"token punctuation\">-</span>cli <span class=\"token punctuation\">-</span>g</pre></td></tr></table></figure></li>\n<li>\n<p>克隆 hexo 所需配置文件</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hexo init blog</pre></td></tr></table></figure></li>\n<li>\n<p>切换到刚才克隆的 blog 文件夹里面</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>cd blog</pre></td></tr></table></figure></li>\n<li>\n<p>安装依赖</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>npm install</pre></td></tr></table></figure></li>\n<li>\n<p>在本地运行</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hexo hexo server</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 可简写为</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>heox s</pre></td></tr></table></figure></li>\n</ol>\n</blockquote>\n<p>在浏览器输入 <code>http://localhost:4000</code>  或者<span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdDo0MDAw\">戳此处</span>如果能显示出来默认页面，说明 <code>Hexo</code>  安装成功。</p>\n<h1 id=\"将hexo部署到github上\"><a class=\"markdownIt-Anchor\" href=\"#将hexo部署到github上\">#</a> 将 hexo 部署到 github 上</h1>\n<blockquote>\n<ol>\n<li>\n<p>注册 github 账号</p>\n<p>这一步过于简单，我就提一下，进入 github 官网，你也可以直接戳这里<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tLw==\"> github 官网</span>，这里提一下，有些人的电脑进不了 github 官网，提示 <code>请求超时</code> 这类事的情况是因为需要解析，可能是因为是国外的网站的原因吧！要在 c 盘改一个扫描文件来着，当时搞了我好半天，这里我就不做展示了。如果能进官网，就直接输入 name，email，password。注册就完事了。</p>\n</li>\n<li>\n<p>创建 github 仓库。</p>\n<p>注意：仓库名一定要是你的 <code>github名</code>  + <code>github</code> + <code>io</code></p>\n<p>例： <code>Zhangsan.github.io</code></p>\n</li>\n<li>\n<p>就这。。。</p>\n</li>\n</ol>\n</blockquote>\n",
            "tags": []
        },
        {
            "id": "https://lklyx.github.io/%E8%B8%A9%E5%9D%91%E7%AF%87/%E4%B8%BB%E9%A2%98%E8%B8%A9%E5%9D%91%E7%AF%87/",
            "url": "https://lklyx.github.io/%E8%B8%A9%E5%9D%91%E7%AF%87/%E4%B8%BB%E9%A2%98%E8%B8%A9%E5%9D%91%E7%AF%87/",
            "title": "前端到处是坑坑！",
            "date_published": "2020-11-06T09:02:30.450Z",
            "content_html": "<h1 id=\"hexo代码块样式调整-1\"><a class=\"markdownIt-Anchor\" href=\"#hexo代码块样式调整-1\">#</a> hexo 代码块样式调整 1</h1>\n<blockquote>\n<h2 id=\"问题描述\"><a class=\"markdownIt-Anchor\" href=\"#问题描述\">#</a>  <code>问题描述</code></h2>\n<ul>\n<li>代码显示在代码的头部，代码块 body 部分是空白的。</li>\n<li>代码块前面的三个不同颜色的小点被遮挡。</li>\n<li>代码块区域放大以后不能点返回箭头，否则页面卡住，必须刷新页面才能继续浏览。</li>\n<li>代码块的行号从头部开始显示。</li>\n</ul>\n<h2 id=\"解决方法\"><a class=\"markdownIt-Anchor\" href=\"#解决方法\">#</a>  <code>解决方法</code></h2>\n<ol>\n<li>\n<p>前四个问题我找了一天的答案，总是有瑕疵，终于，第二天中午的时候，我找到了，原来是主题配置的问题，所以啊，都是不认真看主题配置的原因，我用的是 hexo 中的 shoka 主题。主题配置里面有提到。<strong>停用默认代码高亮功能，否则代码块的 mac 样式不能正常显示</strong>。找到 <code>highlight</code>  和 <code>prismjs</code>  把 <code>enable</code>  改成 <code>false</code></p>\n</li>\n<li>\n<p>以下是我的代码：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">highlight</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># 主题配置需要停用</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">auto_detect</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 代码块高亮</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">line_number</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">tab_replace</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token key atrule\">wrap</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token key atrule\">hljs</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token key atrule\">prismjs</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># 主题配置需要停用</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token key atrule\">preprocess</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token key atrule\">line_number</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token key atrule\">tab_replace</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span></pre></td></tr></table></figure></li>\n</ol>\n</blockquote>\n<h1 id=\"hexo代码块样式调整-2\"><a class=\"markdownIt-Anchor\" href=\"#hexo代码块样式调整-2\">#</a> hexo 代码块样式调整 2</h1>\n<blockquote>\n<h2 id=\"问题描述-2\"><a class=\"markdownIt-Anchor\" href=\"#问题描述-2\">#</a>  <code>问题描述</code></h2>\n<ul>\n<li>代码块自动换行</li>\n<li>代码块前后有空白行问题</li>\n</ul>\n<h2 id=\"解决方法-2\"><a class=\"markdownIt-Anchor\" href=\"#解决方法-2\">#</a>  <code>解决方法</code></h2>\n<ol>\n<li>\n<p>找到 <code>hexo-util/lib/highlight.js</code>  文件，一般路径为 <code>root/node_modules/hexo-util/lib/highlight.js</code></p>\n</li>\n<li>\n<p>修改 <code>highlight.js</code>  中的代码，有些在 <code>35~38</code>  行处，有些在 <code>91</code>  行处，各有不同。</p>\n</li>\n<li>\n<p><code>修改前</code></p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>numbers += '&lt;div class=\"line\"<span class=\"token punctuation\">></span>' + (firstLine + i) + '&lt;/div<span class=\"token punctuation\">></span>';</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>content += '&lt;div class=\"line';</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">content += (mark.indexOf(firstLine + i) !== -1) ? ' marked'</span> <span class=\"token punctuation\">:</span> '';</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>content += '\"<span class=\"token punctuation\">></span>' + line + '&lt;/div<span class=\"token punctuation\">></span>';</pre></td></tr></table></figure></li>\n<li>\n<p><code>修改后</code></p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>numbers += '&lt;span class=\"line\"<span class=\"token punctuation\">></span>' + (firstLine + i) + '&lt;/span<span class=\"token punctuation\">></span>\\n';</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>content += '&lt;span class=\"line';</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">content += (mark.indexOf(firstLine + i) !== -1) ? ' marked'</span> <span class=\"token punctuation\">:</span> '';</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>content += '\"<span class=\"token punctuation\">></span>' + line + '&lt;/span<span class=\"token punctuation\">></span>\\n';</pre></td></tr></table></figure></li>\n<li>\n<p>总结：把里面的 <code>div</code>  标签换成 <code>span</code>  标签</p>\n</li>\n</ol>\n</blockquote>\n<h1 id=\"在hexo插入本地图片\"><a class=\"markdownIt-Anchor\" href=\"#在hexo插入本地图片\">#</a> 在 Hexo 插入本地图片</h1>\n<blockquote>\n<h2 id=\"问题描述-3\"><a class=\"markdownIt-Anchor\" href=\"#问题描述-3\">#</a>  <code>问题描述</code></h2>\n<ul>\n<li>图片显示不成功</li>\n<li>页面没反应，或者显示图片的地方只显示 <code>alt</code>  里面的类容</li>\n<li>或者成功以后打印出 <code>no src attr skipped...</code>  这类似的代码</li>\n</ul>\n<h2 id=\"解决方法-3\"><a class=\"markdownIt-Anchor\" href=\"#解决方法-3\">#</a>  <code>解决方法</code></h2>\n<ol>\n<li>\n<p>首先我们需要安装一个插件</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>npm install https<span class=\"token punctuation\">:</span>//github.com/CodeFalling/hexo<span class=\"token punctuation\">-</span>asset<span class=\"token punctuation\">-</span>image <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>save</pre></td></tr></table></figure><p><code>不要忘记修改配置文件</code> <strong> post_asset_folder</strong> 值为 <strong>true</strong></p>\n</li>\n<li>\n<p>由于本身的 asset-image 有 bug ，我们需要在 node_modules 中寻找到 hexo-asset-image 插件，修改 index.js 内容为以下：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> cheerio <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cheerio'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">str<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">return</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">var</span> version <span class=\"token operator\">=</span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span>hexo<span class=\"token punctuation\">.</span>version<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>hexo<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">.</span>filter<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token string\">'after_post_render'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">var</span> config <span class=\"token operator\">=</span> hexo<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>post_asset_folder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">var</span> link <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>permalink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>version<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>version<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t   <span class=\"token keyword\">var</span> beginPos <span class=\"token operator\">=</span> <span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span>link<span class=\"token punctuation\">,</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t   <span class=\"token keyword\">var</span> beginPos <span class=\"token operator\">=</span> <span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span>link<span class=\"token punctuation\">,</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token comment\">// In hexo 3.1.1, the permalink of \"about\" page is like \".../about/index.html\".</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token keyword\">var</span> endPos <span class=\"token operator\">=</span> link<span class=\"token punctuation\">.</span><span class=\"token function\">lastIndexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    link <span class=\"token operator\">=</span> link<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span>beginPos<span class=\"token punctuation\">,</span> endPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">var</span> toprocess <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'excerpt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'more'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'content'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> toprocess<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token keyword\">var</span> key <span class=\"token operator\">=</span> toprocess<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre> </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token keyword\">var</span> $ <span class=\"token operator\">=</span> cheerio<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        ignoreWhitespace<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        xmlMode<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        lowerCaseTags<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        decodeEntities<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'src'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t<span class=\"token comment\">// For windows style path, we replace '\\' to '/'.</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t<span class=\"token keyword\">var</span> src <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'src'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\\\'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">http[s]*.*|\\/\\/.*</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t\t<span class=\"token operator\">!</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^\\s*\\/</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t\t <span class=\"token comment\">// For \"about\" page, the first part of \"src\" can't be removed.</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t\t <span class=\"token comment\">// In addition, to support multi-level local directory.</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t\t <span class=\"token keyword\">var</span> linkArray <span class=\"token operator\">=</span> link<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">elem</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">return</span> elem <span class=\"token operator\">!=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t\t  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t\t  <span class=\"token keyword\">var</span> srcArray <span class=\"token operator\">=</span> src<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">elem</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">return</span> elem <span class=\"token operator\">!=</span> <span class=\"token string\">''</span> <span class=\"token operator\">&amp;&amp;</span> elem <span class=\"token operator\">!=</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t\t  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t\t  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>srcArray<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t\t\tsrcArray<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\t\t  src <span class=\"token operator\">=</span> srcArray<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\t\t  <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'src'</span><span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">.</span>root <span class=\"token operator\">+</span> link <span class=\"token operator\">+</span> src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\t\t  console<span class=\"token punctuation\">.</span>info<span class=\"token operator\">&amp;&amp;</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"update link as:-->\"</span><span class=\"token operator\">+</span>config<span class=\"token punctuation\">.</span>root <span class=\"token operator\">+</span> link <span class=\"token operator\">+</span> src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t<span class=\"token comment\">// 注释这两条打印是为了不报打印结果，不然你的命令窗口总会显示 no src attr skipped... 这类似的字样。</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\t<span class=\"token comment\">//console.info&amp;&amp;console.info(\"no src attr, skipped...\");</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t<span class=\"token comment\">//console.info&amp;&amp;console.info($(this));</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>      data<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> $<span class=\"token punctuation\">.</span><span class=\"token function\">html</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>最后，打开_config.yml 修改下述内容</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># URL</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">## If your site is put in a subdirectory, set url as 'http://example.com/child' and root as '/child/'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># url: http://example.com</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//XXXXX.github.io <span class=\"token comment\"># 主要修改这里，把前面的 XXXXX 改为自己的 github 地址即可。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token key atrule\">root</span><span class=\"token punctuation\">:</span> /</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># permalink: :year/:month/:day/:title/</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token key atrule\">permalink</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">:</span>title/</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>permalink_defaults<span class=\"token punctuation\">:</span></pre></td></tr></table></figure></li>\n<li>\n<p>总结，由于我用的是 Typora 编辑器，对于 markdown 来说，有很多编辑器，可能各不相同，在插入图片的时候我是直接 QQ 截图再需要放的地方直接 <code>Ctrl</code> + <code>V</code> ，这样的话，就会出现图片，上面会弹出将这个图片复制到。。。一般是在 root/source/images（这个文件夹是自己新建的，以后写文章里面的插图，我都放在这里面）之下。除了这里，还有文章的相同路径下也会保存一张相同的图片，（这张图片可以删除，不影响渲染。）如果感觉有重复，就删掉文章之下的图片，这是它自动生成的。</p>\n</li>\n</ol>\n</blockquote>\n",
            "tags": []
        },
        {
            "id": "https://lklyx.github.io/%E5%94%A0%E5%97%91%E7%AF%87/%E7%BC%98%E8%B5%B7/",
            "url": "https://lklyx.github.io/%E5%94%A0%E5%97%91%E7%AF%87/%E7%BC%98%E8%B5%B7/",
            "title": "缘起 ^_^",
            "date_published": "2020-11-06T07:03:53.480Z",
            "content_html": "<blockquote>\n<p>      传说，在 2500 万年前，一颗带着蓝色火焰的陨石从天而降，此时，有个少年正放羊回来，顺着河边，沿岸踱步、怡然自得。突然 …</p>\n<hr>\n<p>哈哈，扯远了。不好意思啊！各位，我是一个学习前端的小小白，很荣幸，我能来到前端的世界，我站在这个陌生而又充满挑战的世界里，一眼望去，有土坡绵延而成的山脉，也有雨滴溪水汇成的江河海洋。可谓是 —— 那啥！忘词了，反正就是啥都有！大学以来，就很喜欢写页面，我读的也是计算机相关的专业。学过的课程也很多， <code>java</code> 、 <code>c++</code> 、 <code>ps</code> 、 <code>综合布线</code> 、 <code>网络协议</code> 、 <code>html</code>  、 <code>css</code> 、 <code>Javascript</code> 。其中最喜欢的就是做网页了。就因为简单，容易上手。写出来就能看得到。尽管如此喜欢，还是一事无成，其他的课程也都学得半斤八两。多多少少了解一点。看得懂，写不出来。浑浑噩噩，三年结束了。等到工作了，才自学了一些东西。在此，和大家分享一下，我有很多不足的地方，希望在接下来的日子里。不断完善。</p>\n</blockquote>\n",
            "tags": []
        }
    ]
}